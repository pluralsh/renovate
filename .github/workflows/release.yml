name: Release
on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    outputs:
      os-matrix: ${{ steps.os-matrix.outputs.os-matrix }}
      os-matrix-is-full: ${{ steps.os-matrix-is-full.outputs.os-matrix-is-full }}
      os-matrix-prefetch: ${{ steps.os-matrix-prefetch.outputs.matrix }}
      test-shard-matrix: ${{ steps.schedule-test-shards.outputs.test-shard-matrix }}
      test-matrix-empty: ${{ steps.schedule-test-shards.outputs.test-matrix-empty }}

    steps:
      - name: Calculate `os-matrix-is-full` output
        id: os-matrix-is-full
        env:
          IS_FULL: >-
            ${{
              (
                github.event_name != 'pull_request' ||
                contains(github.event.pull_request.labels.*.name, 'ci:fulltest')
              ) && 'true' || ''
            }}
        run: |
          echo 'OS_MATRIX_IS_FULL=${{ env.IS_FULL }}' >> "$GITHUB_ENV"
          echo 'os-matrix-is-full=${{ env.IS_FULL }}' >> "$GITHUB_OUTPUT"

      - name: Calculate `os-matrix` output
        id: os-matrix
        env:
          OS_ALL: '["ubuntu-latest", "macos-latest", "windows-latest"]'
          OS_LINUX_ONLY: '["ubuntu-latest"]'
        run: |
          echo 'os-matrix=${{
            env.OS_MATRIX_IS_FULL && env.OS_ALL || env.OS_LINUX_ONLY
          }}' >> "$GITHUB_OUTPUT"

      - name: Detect changed files
        if: ${{ github.event_name == 'pull_request' }}
        id: changed-files
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.event.repository.full_name }}
          PR_URL: >-
            https://api.github.com/repos/{owner}/{repo}/compare/${{
              github.event.pull_request.base.sha
            }}...${{
              github.event.pull_request.head.sha
            }}
          JQ_FILTER: >-
            "changed-files=" + ([.files[].filename] | tostring)
        run: gh api ${{ env.PR_URL }} | jq -rc '${{ env.JQ_FILTER }}' >> "$GITHUB_OUTPUT"

      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          sparse-checkout: ${{ env.SPARSE_CHECKOUT }}

      - name: Calculate matrix for `node_modules` prefetch
        uses: ./.github/actions/calculate-prefetch-matrix
        id: os-matrix-prefetch
        with:
          repo: ${{ github.event.repository.full_name }}
          token: ${{ github.token }}
          node-version: ${{ env.NODE_VERSION }}

      - name: Prefetch modules for `ubuntu-latest`
        id: setup-node
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}
          os: ${{ runner.os }}
          save-cache: true

      - name: Schedule test shards
        id: schedule-test-shards
        env:
          ALL_PLATFORMS: ${{ env.OS_MATRIX_IS_FULL }}
          FILTER_SHARDS: ${{ github.event.pull_request.draft && 'true' || '' }}
          CHANGED_FILES: ${{ steps.changed-files.outputs.changed-files }}
        run: |
          echo "$(yarn schedule-test-shards)" >> "$GITHUB_OUTPUT"

  build:
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event.pull_request.draft != true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}
          os: ${{ runner.os }}

      - name: Build
        run: yarn build

  bump:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Bump version
        id: version-bump
        uses: phips28/gh-action-bump-version@v10.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          major-wording: BREAKING CHANGE
          minor-wording: feat,minor
          patch-wording: fix,chore

  publish:
    name: Build and push Docker container
    needs: bump
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: ghcr.io/pluralsh/plural-renovate
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}},value=${{ steps.version-bump.outputs.newTag }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: '.'
          file: './Dockerfile'
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Create GitHub release
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ steps.version-bump.outputs.newTag }}
          generate_release_notes: true

      - name: Push Chart to GHCR
        uses: appany/helm-oci-chart-releaser@v0.3.0
        with:
          name: plural-renovate
          repository: pluralsh/renovate
          tag:  ${{ steps.version-bump.outputs.newTag }}
          registry: ghcr.io
          registry_username: ${{ github.repository_owner }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
